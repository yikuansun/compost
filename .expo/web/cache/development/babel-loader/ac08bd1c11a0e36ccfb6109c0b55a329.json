{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/yichen/Git/compost/GoCompost/node_modules/react-native-elements/src/overlay/Overlay.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { withTheme } from \"../config\";\n\nvar Overlay = function Overlay(_ref) {\n  var children = _ref.children,\n      backdropStyle = _ref.backdropStyle,\n      overlayStyle = _ref.overlayStyle,\n      onBackdropPress = _ref.onBackdropPress,\n      fullScreen = _ref.fullScreen,\n      ModalComponent = _ref.ModalComponent,\n      isVisible = _ref.isVisible,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"backdropStyle\", \"overlayStyle\", \"onBackdropPress\", \"fullScreen\", \"ModalComponent\", \"isVisible\"]);\n\n  return React.createElement(ModalComponent, _extends({\n    visible: isVisible,\n    onRequestClose: onBackdropPress,\n    transparent: true\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: onBackdropPress,\n    testID: \"RNE__Overlay__backdrop\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    testID: \"backdrop\",\n    style: StyleSheet.flatten([styles.backdrop, backdropStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    pointerEvents: \"box-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: StyleSheet.flatten([styles.overlay, fullScreen && styles.fullscreen, overlayStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, children)));\n};\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  backdropStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onBackdropPress: PropTypes.func,\n  fullScreen: PropTypes.bool,\n  ModalComponent: PropTypes.elementType\n};\nOverlay.defaultProps = {\n  fullScreen: false,\n  onBackdropPress: function onBackdropPress() {\n    return null;\n  },\n  ModalComponent: Modal\n};\nvar styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, .4)'\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%'\n  },\n  overlay: _objectSpread({\n    backgroundColor: 'white',\n    borderRadius: 3,\n    padding: 10\n  }, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0, 0, 0, .3)',\n      shadowOffset: {\n        width: 0,\n        height: 1\n      },\n      shadowRadius: 4\n    }\n  }))\n});\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');","map":{"version":3,"sources":["/home/yichen/Git/compost/GoCompost/node_modules/react-native-elements/src/overlay/Overlay.js"],"names":["React","PropTypes","withTheme","Overlay","children","backdropStyle","overlayStyle","onBackdropPress","fullScreen","ModalComponent","isVisible","rest","StyleSheet","flatten","styles","backdrop","container","overlay","fullscreen","propTypes","element","isRequired","bool","oneOfType","object","array","func","elementType","defaultProps","Modal","create","position","top","left","width","height","justifyContent","alignItems","backgroundColor","flex","borderRadius","padding","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Platform,\n  TouchableWithoutFeedback,\n  Modal,\n} from 'react-native';\n\nimport { withTheme } from '../config';\n\nconst Overlay = ({\n  children,\n  backdropStyle,\n  overlayStyle,\n  onBackdropPress,\n  fullScreen,\n  ModalComponent,\n  isVisible,\n  ...rest\n}) => (\n  <ModalComponent\n    visible={isVisible}\n    onRequestClose={onBackdropPress}\n    transparent\n    {...rest}\n  >\n    <TouchableWithoutFeedback\n      onPress={onBackdropPress}\n      testID=\"RNE__Overlay__backdrop\"\n    >\n      <View\n        testID=\"backdrop\"\n        style={StyleSheet.flatten([styles.backdrop, backdropStyle])}\n      />\n    </TouchableWithoutFeedback>\n\n    <View style={styles.container} pointerEvents=\"box-none\">\n      <View\n        style={StyleSheet.flatten([\n          styles.overlay,\n          fullScreen && styles.fullscreen,\n          overlayStyle,\n        ])}\n      >\n        {children}\n      </View>\n    </View>\n  </ModalComponent>\n);\n\nOverlay.propTypes = {\n  children: PropTypes.element.isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  backdropStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onBackdropPress: PropTypes.func,\n  fullScreen: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n};\n\nOverlay.defaultProps = {\n  fullScreen: false,\n  onBackdropPress: () => null,\n  ModalComponent: Modal,\n};\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'rgba(0, 0, 0, .4)',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  fullscreen: {\n    width: '100%',\n    height: '100%',\n  },\n  overlay: {\n    backgroundColor: 'white',\n    borderRadius: 3,\n    padding: 10,\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0, 0, 0, .3)',\n        shadowOffset: { width: 0, height: 1 },\n        shadowRadius: 4,\n      },\n    }),\n  },\n});\n\nexport { Overlay };\nexport default withTheme(Overlay, 'Overlay');\n"]},"metadata":{},"sourceType":"module"}