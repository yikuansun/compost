{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/yichen/Git/compost/GoCompost/components/Dashboard/Dashboard.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Container, Content } from \"native-base\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport compostable from \"../../assets/compostableLogo.png\";\n\nvar Dashboard = function (_Component) {\n  _inherits(Dashboard, _Component);\n\n  var _super = _createSuper(Dashboard);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        style: {\n          backgroundColor: \"white\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: {\n          height: 580,\n          width: 400,\n          resizeMode: 'stretch'\n        },\n        source: compostable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      })));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nDashboard.navigationOptions = {\n  headerTitle: \"Dashboard\"\n};\nexport default Dashboard;","map":{"version":3,"sources":["/home/yichen/Git/compost/GoCompost/components/Dashboard/Dashboard.js"],"names":["React","Component","Container","Content","compostable","Dashboard","backgroundColor","height","width","resizeMode","navigationOptions","headerTitle"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,aAAnC;;;AAEA,OAAOC,WAAP;;IAGMC,S;;;;;;;;;;;;;6BAIK;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAE;AAAlB,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAC,GAAR;AAAaC,UAAAA,KAAK,EAAC,GAAnB;AAAuBC,UAAAA,UAAU,EAAC;AAAlC,SAAd;AAA4D,QAAA,MAAM,EAAEL,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAHF,CADF;AAUD;;;;EAfqBH,S;;AAAlBI,S,CACGK,iB,GAAoB;AACzBC,EAAAA,WAAW,EAAE;AADY,C;AAiB7B,eAAeN,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container, Content } from \"native-base\";\nimport { View, Image} from 'react-native';\nimport compostable from '../../assets/compostableLogo.png';\n\n//Components\nclass Dashboard extends Component {\n  static navigationOptions = {\n    headerTitle: \"Dashboard\"\n  };\n  render() {\n    return (\n      <Container style={{backgroundColor: \"white\"}}>\n        <View>\n        </View>\n        <View>\n        <Image style={{height:580, width:400,resizeMode:'stretch'}} source={compostable}/>\n\n        </View>\n      </Container>\n    );\n  }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}