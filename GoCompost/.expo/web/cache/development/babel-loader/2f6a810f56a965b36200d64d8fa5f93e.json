{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/pengsun/compost/GoCompost/components/Place/PlaceList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { ListItem, Text, Avatar } from \"react-native-elements\";\nimport { Container, Content } from \"native-base\";\nimport { GOOGLE_API_KEY } from \"../../api_key\";\nimport styles from \"./styles\";\n\nvar PlaceList = function (_Component) {\n  _inherits(PlaceList, _Component);\n\n  var _super = _createSuper(PlaceList);\n\n  function PlaceList() {\n    var _this;\n\n    _classCallCheck(this, PlaceList);\n\n    _this = _super.call(this);\n\n    _this.handleClick = function (item) {\n      console.log(\"item:\" + JSON.stringify(item, null, 4));\n      var newRegion = {\n        latitude: item.location.latitude,\n        longitude: item.location.longitude,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      };\n\n      _this.props.map.animateToRegion(newRegion, 500);\n    };\n\n    return _this;\n  }\n\n  _createClass(PlaceList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var places = this.props.places;\n      console.log(\"try to render place list\");\n      return React.createElement(Container, {\n        style: styles.container2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, places.length <= 0 && React.createElement(View, {\n        style: styles.loaderContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(ActivityIndicator, {\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      })), places.length > 0 && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: places,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(TouchableOpacity, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }\n          }, React.createElement(ListItem, {\n            bottomDivider: true,\n            onPress: function onPress() {\n              return _this2.handleClick(item);\n            },\n            key: item.place_id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 21\n            }\n          }, React.createElement(Avatar, {\n            title: item.name,\n            rounded: false,\n            size: \"large\",\n            source: item.photo && {\n              uri: \"https://maps.googleapis.com/maps/api/place/photo?photoreference=\" + item.photo.photo_reference + \"&sensor=false&maxheight=\" + item.photo.height + \"&maxwidth=\" + item.photo.width + \"&key=\" + GOOGLE_API_KEY\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 23\n            }\n          }), React.createElement(ListItem.Content, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 23\n            }\n          }, React.createElement(ListItem.Title, {\n            style: styles.placeTitleFont,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 27\n            }\n          }, item.name), React.createElement(ListItem.Subtitle, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 27\n            }\n          }, React.createElement(Text, {\n            style: styles.placeDetailFont,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }\n          }, \"Address: \", item.address, \"\\n\", \"Type: \", item.type, \"\\n\", \"Hours: \", item.hours, \"\\n\", \"Contact: \", item.contact, \"\\n\")))));\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.place_id.toString();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return PlaceList;\n}(Component);\n\nexport default PlaceList;","map":{"version":3,"sources":["/Users/pengsun/compost/GoCompost/components/Place/PlaceList.js"],"names":["React","Component","ListItem","Text","Avatar","Container","Content","GOOGLE_API_KEY","styles","PlaceList","handleClick","item","console","log","JSON","stringify","newRegion","latitude","location","longitude","latitudeDelta","longitudeDelta","props","map","animateToRegion","places","container2","length","loaderContainer","place_id","name","photo","uri","photo_reference","height","width","placeTitleFont","placeDetailFont","address","type","hours","contact","toString"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  FlatList,  // List component\n  TouchableOpacity,  // produce the effect while touching a list item\n  View,\n  ActivityIndicator,\n} from \"react-native\";\nimport { ListItem, Text, Avatar } from \"react-native-elements\";\nimport { Container, Content } from \"native-base\";\nimport {GOOGLE_API_KEY} from \"../../api_key\";\nimport styles from \"./styles\";\n\n/* display the list of places */\nclass PlaceList extends Component {\n  constructor() {\n    super();\n\n  }\n  // ListMapItem's handleClick prop\n  handleClick = (item) => {\n    // construct new region from marker's lat/lng\n    // and current region's deltas to keep zoom level\n    console.log(\"item:\" + JSON.stringify(item, null, 4) )\n    const newRegion = {\n      latitude: item.location.latitude,\n      longitude: item.location.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    }\n    // animate camera to that region over 500 ms\n    this.props.map.animateToRegion(newRegion, 500)\n  }\n\n/*\n*/\n\n  render() {\n    const { places } = this.props;\n    console.log(\"try to render place list\");\n    return (\n      <Container style={styles.container2}>\n        <Content>\n          {places.length <= 0 && (\n            <View style={styles.loaderContainer}>\n              <ActivityIndicator size=\"large\" />\n            </View>\n          )}\n          {places.length > 0 && (\n            <View>\n\n            <FlatList\n              data={places}\n              renderItem={({ item }) => (\n                <TouchableOpacity>\n                    <ListItem bottomDivider\n                      onPress={() => this.handleClick(item) }\n                      key={item.place_id}\n                    >\n                      <Avatar\n                        title={item.name}\n                        rounded={false}\n                        size={\"large\"}\n                        source={\n                          item.photo && \n                          // call google API to get the photo\n                          {uri: \n                            `https://maps.googleapis.com/maps/api/place/photo?photoreference=${item.photo.photo_reference}&sensor=false&maxheight=${item.photo.height}&maxwidth=${item.photo.width}&key=${GOOGLE_API_KEY}`\n                          }\n                      }/>\n                      <ListItem.Content>\n                          <ListItem.Title style={styles.placeTitleFont}>{item.name}</ListItem.Title>\n                          <ListItem.Subtitle>\n                                <Text style={styles.placeDetailFont}>\n                                  Address: {item.address}{\"\\n\"}\n                                  Type: {item.type}{\"\\n\"}\n                                  Hours: {item.hours}{\"\\n\"}\n                                  Contact: {item.contact}{\"\\n\"}\n                                </Text>\n                          </ListItem.Subtitle>\n                      </ListItem.Content>\n                    </ListItem>\n                </TouchableOpacity>\n              )}\n              keyExtractor={item => item.place_id.toString()}\n            />\n            </View>\n          )}\n        </Content>\n      </Container>\n    );\n  }\n}\n\nexport default PlaceList;"]},"metadata":{},"sourceType":"module"}