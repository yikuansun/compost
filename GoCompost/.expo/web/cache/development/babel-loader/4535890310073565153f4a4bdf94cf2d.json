{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/pengsun/compost/GoCompost/node_modules/react-native-elements/src/avatar/Accessory.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../config\";\nimport Image from \"../image/Image\";\nimport Icon from \"../icons/Icon\";\n\nfunction Accessory(_ref) {\n  var size = _ref.size,\n      style = _ref.style,\n      underlayColor = _ref.underlayColor,\n      onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      source = _ref.source,\n      props = _objectWithoutProperties(_ref, [\"size\", \"style\", \"underlayColor\", \"onPress\", \"onLongPress\", \"source\"]);\n\n  return React.createElement(TouchableHighlight, {\n    style: StyleSheet.flatten([styles.accessory, {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }, style]),\n    underlayColor: underlayColor,\n    onPress: onPress,\n    onLongPress: onLongPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, source ? React.createElement(Image, _extends({\n    style: {\n      width: size,\n      height: size,\n      borderRadius: size / 2\n    }\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  })) : React.createElement(Icon, _extends({\n    size: size * 0.8\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }))));\n}\n\nAccessory.defaultProps = {\n  size: 10,\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000'\n};\nAccessory.propTypes = {\n  size: PropTypes.number,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  color: PropTypes.string,\n  underlayColor: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func\n};\nvar styles = StyleSheet.create({\n  accessory: _objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa'\n  }, Platform.select({\n    android: {\n      elevation: 1\n    },\n    default: {\n      shadowColor: '#000',\n      shadowOffset: {\n        width: 1,\n        height: 1\n      },\n      shadowRadius: 2,\n      shadowOpacity: 0.5\n    }\n  }))\n});\nexport default withTheme(Accessory, 'AvatarAccessory');","map":{"version":3,"sources":["/Users/pengsun/compost/GoCompost/node_modules/react-native-elements/src/avatar/Accessory.js"],"names":["React","PropTypes","withTheme","Image","Icon","Accessory","size","style","underlayColor","onPress","onLongPress","source","props","StyleSheet","flatten","styles","accessory","width","height","borderRadius","defaultProps","name","type","color","propTypes","number","string","oneOfType","object","array","func","create","position","bottom","right","alignItems","justifyContent","backgroundColor","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableHighlight, View, Platform, StyleSheet } from 'react-native';\nimport { withTheme } from '../config';\nimport Image from '../image/Image';\nimport Icon from '../icons/Icon';\n\nfunction Accessory({\n  size,\n  style,\n  underlayColor,\n  onPress,\n  onLongPress,\n  source,\n  ...props\n}) {\n  return (\n    <TouchableHighlight\n      style={StyleSheet.flatten([\n        styles.accessory,\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n        },\n        style,\n      ])}\n      underlayColor={underlayColor}\n      onPress={onPress}\n      onLongPress={onLongPress}\n    >\n      <View>\n        {source ? (\n          <Image\n            style={{\n              width: size,\n              height: size,\n              borderRadius: size / 2,\n            }}\n            {...props}\n          />\n        ) : (\n          <Icon size={size * 0.8} {...props} />\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n}\n\nAccessory.defaultProps = {\n  size: 10,\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000',\n};\n\nAccessory.propTypes = {\n  size: PropTypes.number,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  color: PropTypes.string,\n  underlayColor: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n};\n\nconst styles = StyleSheet.create({\n  accessory: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa',\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: '#000',\n        shadowOffset: { width: 1, height: 1 },\n        shadowRadius: 2,\n        shadowOpacity: 0.5,\n      },\n    }),\n  },\n});\n\nexport default withTheme(Accessory, 'AvatarAccessory');\n"]},"metadata":{},"sourceType":"module"}