{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/yichen/Git/compost/GoCompost/node_modules/react-native-elements/src/icons/Icon.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Color from 'color';\nimport getIconType from \"../helpers/getIconType\";\nimport getIconStyle from \"../helpers/getIconStyle\";\nimport { withTheme } from \"../config\";\n\nvar Icon = function Icon(props) {\n  var type = props.type,\n      name = props.name,\n      size = props.size,\n      colorProp = props.color,\n      iconStyle = props.iconStyle,\n      iconProps = props.iconProps,\n      underlayColor = props.underlayColor,\n      reverse = props.reverse,\n      raised = props.raised,\n      containerStyle = props.containerStyle,\n      reverseColorProp = props.reverseColor,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      onPress = props.onPress,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? onPress ? Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableHighlight\n  }) : View : _props$Component,\n      solid = props.solid,\n      brand = props.brand,\n      theme = props.theme,\n      attributes = _objectWithoutProperties(props, [\"type\", \"name\", \"size\", \"color\", \"iconStyle\", \"iconProps\", \"underlayColor\", \"reverse\", \"raised\", \"containerStyle\", \"reverseColor\", \"disabled\", \"disabledStyle\", \"onPress\", \"Component\", \"solid\", \"brand\", \"theme\"]);\n\n  var color = colorProp || theme.colors.black;\n  var reverseColor = reverseColorProp || theme.colors.white;\n  var IconComponent = getIconType(type);\n  var iconSpecificStyle = getIconStyle(type, {\n    solid: solid,\n    brand: brand\n  });\n\n  var getBackgroundColor = function getBackgroundColor() {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? theme.colors.white : 'transparent';\n  };\n\n  var buttonStyles = {\n    borderRadius: size + 4,\n    height: size * 2 + 4,\n    width: size * 2 + 4\n  };\n\n  if (Platform.OS === 'android' && !attributes.background) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple(Color(color).alpha(0.2).rgb().string(), true);\n    }\n  }\n\n  return React.createElement(View, {\n    style: StyleSheet.flatten([styles.container, (reverse || raised) && styles.button, (reverse || raised) && buttonStyles, raised && styles.raised, iconStyle && iconStyle.borderRadius ? {\n      borderRadius: iconStyle.borderRadius\n    } : {}, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Component, _extends({}, attributes, onPress && {\n    onPress: onPress,\n    disabled: disabled,\n    underlayColor: reverse ? color : underlayColor,\n    activeOpacity: 0.3\n  }, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: StyleSheet.flatten([(reverse || raised) && buttonStyles, {\n      backgroundColor: getBackgroundColor(),\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, disabled && styles.disabled, disabled && disabledStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, React.createElement(IconComponent, _extends({\n    testID: \"iconIcon\",\n    style: StyleSheet.flatten([{\n      backgroundColor: 'transparent'\n    }, iconStyle && iconStyle]),\n    size: size,\n    name: name,\n    color: reverse ? reverseColor : color\n  }, iconSpecificStyle, iconProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })))));\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  solid: PropTypes.bool,\n  brand: PropTypes.bool\n};\nIcon.defaultProps = {\n  underlayColor: 'transparent',\n  reverse: false,\n  raised: false,\n  size: 24,\n  disabled: false,\n  type: 'material',\n  solid: false,\n  brand: false\n};\nvar styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden'\n  },\n  button: {\n    margin: 7\n  },\n  raised: _objectSpread({}, Platform.select({\n    android: {\n      elevation: 2\n    },\n    default: {\n      shadowColor: 'rgba(0,0,0, .4)',\n      shadowOffset: {\n        height: 1,\n        width: 1\n      },\n      shadowOpacity: 1,\n      shadowRadius: 1\n    }\n  })),\n  disabled: {\n    backgroundColor: '#D1D5D8'\n  }\n});\nexport { Icon };\nexport default withTheme(Icon, 'Icon');","map":{"version":3,"sources":["/home/yichen/Git/compost/GoCompost/node_modules/react-native-elements/src/icons/Icon.js"],"names":["React","PropTypes","Color","getIconType","getIconStyle","withTheme","Icon","props","type","name","size","colorProp","color","iconStyle","iconProps","underlayColor","reverse","raised","containerStyle","reverseColorProp","reverseColor","disabled","disabledStyle","onPress","Component","Platform","select","android","TouchableNativeFeedback","default","TouchableHighlight","View","solid","brand","theme","attributes","colors","black","white","IconComponent","iconSpecificStyle","getBackgroundColor","buttonStyles","borderRadius","height","width","OS","background","Version","Ripple","alpha","rgb","string","StyleSheet","flatten","styles","container","button","activeOpacity","backgroundColor","alignItems","justifyContent","propTypes","number","elementType","bool","oneOfType","object","array","func","defaultProps","create","overflow","margin","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  TouchableHighlight,\n  View,\n  StyleSheet,\n  TouchableNativeFeedback,\n} from 'react-native';\nimport Color from 'color';\n\nimport getIconType from '../helpers/getIconType';\nimport getIconStyle from '../helpers/getIconStyle';\nimport { withTheme } from '../config';\n\nconst Icon = (props) => {\n  const {\n    type,\n    name,\n    size,\n    color: colorProp,\n    iconStyle,\n    iconProps,\n    underlayColor,\n    reverse,\n    raised,\n    containerStyle,\n    reverseColor: reverseColorProp,\n    disabled,\n    disabledStyle,\n    onPress,\n    Component = onPress\n      ? Platform.select({\n          android: TouchableNativeFeedback,\n          default: TouchableHighlight,\n        })\n      : View,\n    solid,\n    brand,\n    theme,\n    ...attributes\n  } = props;\n  const color = colorProp || theme.colors.black;\n  const reverseColor = reverseColorProp || theme.colors.white;\n\n  const IconComponent = getIconType(type);\n  const iconSpecificStyle = getIconStyle(type, { solid, brand });\n  const getBackgroundColor = () => {\n    if (reverse) {\n      return color;\n    }\n\n    return raised ? theme.colors.white : 'transparent';\n  };\n\n  const buttonStyles = {\n    borderRadius: size + 4,\n    height: size * 2 + 4,\n    width: size * 2 + 4,\n  };\n\n  if (Platform.OS === 'android' && !attributes.background) {\n    if (Platform.Version >= 21) {\n      attributes.background = TouchableNativeFeedback.Ripple(\n        Color(color).alpha(0.2).rgb().string(),\n        true\n      );\n    }\n  }\n\n  return (\n    <View\n      style={StyleSheet.flatten([\n        styles.container,\n        (reverse || raised) && styles.button,\n        (reverse || raised) && buttonStyles,\n        raised && styles.raised,\n        iconStyle && iconStyle.borderRadius\n          ? {\n              borderRadius: iconStyle.borderRadius,\n            }\n          : {},\n        containerStyle && containerStyle,\n      ])}\n    >\n      <Component\n        {...attributes}\n        {...(onPress && {\n          onPress,\n          disabled,\n          underlayColor: reverse ? color : underlayColor,\n          activeOpacity: 0.3,\n        })}\n      >\n        <View\n          style={StyleSheet.flatten([\n            (reverse || raised) && buttonStyles,\n            {\n              backgroundColor: getBackgroundColor(),\n              alignItems: 'center',\n              justifyContent: 'center',\n            },\n            disabled && styles.disabled,\n            disabled && disabledStyle,\n          ])}\n        >\n          <IconComponent\n            testID=\"iconIcon\"\n            style={StyleSheet.flatten([\n              { backgroundColor: 'transparent' },\n              iconStyle && iconStyle,\n            ])}\n            size={size}\n            name={name}\n            color={reverse ? reverseColor : color}\n            {...iconSpecificStyle}\n            {...iconProps}\n          />\n        </View>\n      </Component>\n    </View>\n  );\n};\n\nIcon.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string,\n  size: PropTypes.number,\n  color: PropTypes.string,\n  Component: PropTypes.elementType,\n  underlayColor: PropTypes.string,\n  reverse: PropTypes.bool,\n  raised: PropTypes.bool,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n  reverseColor: PropTypes.string,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  solid: PropTypes.bool,\n  brand: PropTypes.bool,\n};\n\nIcon.defaultProps = {\n  underlayColor: 'transparent',\n  reverse: false,\n  raised: false,\n  size: 24,\n  disabled: false,\n  type: 'material',\n  solid: false,\n  brand: false,\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  button: {\n    margin: 7,\n  },\n  raised: {\n    ...Platform.select({\n      android: {\n        elevation: 2,\n      },\n      default: {\n        shadowColor: 'rgba(0,0,0, .4)',\n        shadowOffset: { height: 1, width: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 1,\n      },\n    }),\n  },\n  disabled: {\n    backgroundColor: '#D1D5D8',\n  },\n});\n\nexport { Icon };\nexport default withTheme(Icon, 'Icon');\n"]},"metadata":{},"sourceType":"module"}