{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/home/yichen/Git/compost/GoCompost/node_modules/react-native-elements/src/buttons/ButtonGroup.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { withTheme } from \"../config\";\nimport { normalizeText, color } from \"../helpers\";\nimport Text from \"../text/Text\";\n\nvar ButtonGroup = function ButtonGroup(props) {\n  var theme = props.theme,\n      rest = _objectWithoutProperties(props, [\"theme\"]);\n\n  var Component = rest.Component,\n      buttons = rest.buttons,\n      _onPress = rest.onPress,\n      selectedIndex = rest.selectedIndex,\n      selectedIndexes = rest.selectedIndexes,\n      selectMultiple = rest.selectMultiple,\n      containerStyle = rest.containerStyle,\n      innerBorderStyle = rest.innerBorderStyle,\n      buttonStyle = rest.buttonStyle,\n      buttonContainerStyle = rest.buttonContainerStyle,\n      textStyle = rest.textStyle,\n      selectedTextStyle = rest.selectedTextStyle,\n      selectedButtonStyle = rest.selectedButtonStyle,\n      _rest$underlayColor = rest.underlayColor,\n      underlayColor = _rest$underlayColor === void 0 ? theme.colors.primary : _rest$underlayColor,\n      activeOpacity = rest.activeOpacity,\n      onHideUnderlay = rest.onHideUnderlay,\n      onShowUnderlay = rest.onShowUnderlay,\n      setOpacityTo = rest.setOpacityTo,\n      disabled = rest.disabled,\n      disabledStyle = rest.disabledStyle,\n      disabledTextStyle = rest.disabledTextStyle,\n      disabledSelectedStyle = rest.disabledSelectedStyle,\n      disabledSelectedTextStyle = rest.disabledSelectedTextStyle,\n      vertical = rest.vertical,\n      attributes = _objectWithoutProperties(rest, [\"Component\", \"buttons\", \"onPress\", \"selectedIndex\", \"selectedIndexes\", \"selectMultiple\", \"containerStyle\", \"innerBorderStyle\", \"buttonStyle\", \"buttonContainerStyle\", \"textStyle\", \"selectedTextStyle\", \"selectedButtonStyle\", \"underlayColor\", \"activeOpacity\", \"onHideUnderlay\", \"onShowUnderlay\", \"setOpacityTo\", \"disabled\", \"disabledStyle\", \"disabledTextStyle\", \"disabledSelectedStyle\", \"disabledSelectedTextStyle\", \"vertical\"]);\n\n  var innerBorderWidth = 1;\n\n  if (innerBorderStyle && Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return React.createElement(View, _extends({}, attributes, {\n    style: StyleSheet.flatten([styles.container, vertical && styles.verticalContainer, containerStyle && containerStyle]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }), buttons.map(function (button, i) {\n    var isSelected = selectedIndex === i || selectedIndexes.includes(i);\n    var isDisabled = disabled === true || Array.isArray(disabled) && disabled.includes(i);\n    return React.createElement(View, {\n      key: i,\n      style: StyleSheet.flatten([styles.button, vertical && styles.verticalComponent, i !== buttons.length - 1 && (vertical ? {\n        borderBottomWidth: innerBorderWidth,\n        borderBottomColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      } : {\n        borderRightWidth: innerBorderWidth,\n        borderRightColor: innerBorderStyle && innerBorderStyle.color || theme.colors.grey4\n      }), buttonContainerStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, React.createElement(Component, {\n      testID: \"buttonGroupItem\",\n      activeOpacity: activeOpacity,\n      setOpacityTo: setOpacityTo,\n      onHideUnderlay: onHideUnderlay,\n      onShowUnderlay: onShowUnderlay,\n      underlayColor: underlayColor,\n      disabled: isDisabled,\n      onPress: function onPress() {\n        if (selectMultiple) {\n          if (selectedIndexes.includes(i)) {\n            _onPress(selectedIndexes.filter(function (index) {\n              return index !== i;\n            }));\n          } else {\n            _onPress([].concat(_toConsumableArray(selectedIndexes), [i]));\n          }\n        } else {\n          _onPress(i);\n        }\n      },\n      style: styles.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: StyleSheet.flatten([styles.textContainer, buttonStyle && buttonStyle, isSelected && {\n        backgroundColor: theme.colors.primary\n      }, isSelected && selectedButtonStyle && selectedButtonStyle, isDisabled && styles.disabled, isDisabled && disabledStyle, isDisabled && isSelected && styles.disabledSelected(theme), isDisabled && isSelected && disabledSelectedStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, button.element ? React.createElement(button.element, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }) : React.createElement(Text, {\n      testID: \"buttonGroupItemText\",\n      style: StyleSheet.flatten([styles.buttonText(theme), textStyle && textStyle, isSelected && {\n        color: '#fff'\n      }, isSelected && selectedTextStyle, isDisabled && styles.disabledText(theme), isDisabled && disabledTextStyle, isDisabled && isSelected && disabledSelectedTextStyle]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, button))));\n  }));\n};\n\nvar styles = {\n  button: {\n    flex: 1\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null\n  },\n  verticalComponent: {\n    height: 40\n  },\n  buttonText: function buttonText(theme) {\n    return _objectSpread({\n      fontSize: normalizeText(13),\n      color: theme.colors.grey2\n    }, Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500'\n      }\n    }));\n  },\n  disabled: {\n    backgroundColor: 'transparent'\n  },\n  disabledText: function disabledText(theme) {\n    return {\n      color: color(theme.colors.disabled).darken(0.3).toString()\n    };\n  },\n  disabledSelected: function disabledSelected(theme) {\n    return {\n      backgroundColor: theme.colors.disabled\n    };\n  }\n};\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number\n  }),\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  buttonContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([PropTypes.bool, PropTypes.arrayOf(PropTypes.number)]),\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  vertical: PropTypes.bool\n};\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity\n  }),\n  onPress: function onPress() {\n    return null;\n  },\n  vertical: false\n};\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');","map":{"version":3,"sources":["/home/yichen/Git/compost/GoCompost/node_modules/react-native-elements/src/buttons/ButtonGroup.js"],"names":["React","PropTypes","withTheme","normalizeText","color","Text","ButtonGroup","props","theme","rest","Component","buttons","onPress","selectedIndex","selectedIndexes","selectMultiple","containerStyle","innerBorderStyle","buttonStyle","buttonContainerStyle","textStyle","selectedTextStyle","selectedButtonStyle","underlayColor","colors","primary","activeOpacity","onHideUnderlay","onShowUnderlay","setOpacityTo","disabled","disabledStyle","disabledTextStyle","disabledSelectedStyle","disabledSelectedTextStyle","vertical","attributes","innerBorderWidth","Object","prototype","hasOwnProperty","call","width","StyleSheet","flatten","styles","container","verticalContainer","map","button","i","isSelected","includes","isDisabled","Array","isArray","verticalComponent","length","borderBottomWidth","borderBottomColor","grey4","borderRightWidth","borderRightColor","filter","index","textContainer","backgroundColor","disabledSelected","element","buttonText","disabledText","flex","justifyContent","alignItems","marginHorizontal","marginVertical","borderColor","borderWidth","flexDirection","borderRadius","overflow","height","fontSize","grey2","Platform","select","android","default","fontWeight","darken","toString","propTypes","object","elementType","func","array","oneOfType","string","number","arrayOf","shape","bool","defaultProps","TouchableNativeFeedback","TouchableOpacity"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  StyleSheet,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { normalizeText, color } from '../helpers';\n\nimport Text from '../text/Text';\n\nconst ButtonGroup = (props) => {\n  const { theme, ...rest } = props;\n\n  const {\n    Component,\n    buttons,\n    onPress,\n    selectedIndex,\n    selectedIndexes,\n    selectMultiple,\n    containerStyle,\n    innerBorderStyle,\n    buttonStyle,\n    buttonContainerStyle,\n    textStyle,\n    selectedTextStyle,\n    selectedButtonStyle,\n    underlayColor = theme.colors.primary,\n    activeOpacity,\n    onHideUnderlay,\n    onShowUnderlay,\n    setOpacityTo,\n    disabled,\n    disabledStyle,\n    disabledTextStyle,\n    disabledSelectedStyle,\n    disabledSelectedTextStyle,\n    vertical,\n    ...attributes\n  } = rest;\n\n  let innerBorderWidth = 1;\n\n  if (\n    innerBorderStyle &&\n    Object.prototype.hasOwnProperty.call(innerBorderStyle, 'width')\n  ) {\n    innerBorderWidth = innerBorderStyle.width;\n  }\n\n  return (\n    <View\n      {...attributes}\n      style={StyleSheet.flatten([\n        styles.container,\n        vertical && styles.verticalContainer,\n        containerStyle && containerStyle,\n      ])}\n    >\n      {buttons.map((button, i) => {\n        const isSelected = selectedIndex === i || selectedIndexes.includes(i);\n        const isDisabled =\n          disabled === true ||\n          (Array.isArray(disabled) && disabled.includes(i));\n\n        return (\n          <View\n            key={i}\n            style={StyleSheet.flatten([\n              styles.button,\n              vertical && styles.verticalComponent,\n              i !== buttons.length - 1 &&\n                (vertical\n                  ? {\n                      borderBottomWidth: innerBorderWidth,\n                      borderBottomColor:\n                        (innerBorderStyle && innerBorderStyle.color) ||\n                        theme.colors.grey4,\n                    }\n                  : {\n                      borderRightWidth: innerBorderWidth,\n                      borderRightColor:\n                        (innerBorderStyle && innerBorderStyle.color) ||\n                        theme.colors.grey4,\n                    }),\n              buttonContainerStyle,\n            ])}\n          >\n            <Component\n              testID=\"buttonGroupItem\"\n              activeOpacity={activeOpacity}\n              setOpacityTo={setOpacityTo}\n              onHideUnderlay={onHideUnderlay}\n              onShowUnderlay={onShowUnderlay}\n              underlayColor={underlayColor}\n              disabled={isDisabled}\n              onPress={() => {\n                if (selectMultiple) {\n                  if (selectedIndexes.includes(i)) {\n                    onPress(selectedIndexes.filter((index) => index !== i));\n                  } else {\n                    onPress([...selectedIndexes, i]);\n                  }\n                } else {\n                  onPress(i);\n                }\n              }}\n              style={styles.button}\n            >\n              <View\n                style={StyleSheet.flatten([\n                  styles.textContainer,\n                  buttonStyle && buttonStyle,\n                  isSelected && {\n                    backgroundColor: theme.colors.primary,\n                  },\n                  isSelected && selectedButtonStyle && selectedButtonStyle,\n                  isDisabled && styles.disabled,\n                  isDisabled && disabledStyle,\n                  isDisabled && isSelected && styles.disabledSelected(theme),\n                  isDisabled && isSelected && disabledSelectedStyle,\n                ])}\n              >\n                {button.element ? (\n                  <button.element />\n                ) : (\n                  <Text\n                    testID=\"buttonGroupItemText\"\n                    style={StyleSheet.flatten([\n                      styles.buttonText(theme),\n                      textStyle && textStyle,\n                      isSelected && { color: '#fff' },\n                      isSelected && selectedTextStyle,\n                      isDisabled && styles.disabledText(theme),\n                      isDisabled && disabledTextStyle,\n                      isDisabled && isSelected && disabledSelectedTextStyle,\n                    ])}\n                  >\n                    {button}\n                  </Text>\n                )}\n              </View>\n            </Component>\n          </View>\n        );\n      })}\n    </View>\n  );\n};\n\nconst styles = {\n  button: {\n    flex: 1,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 5,\n    borderColor: '#e3e3e3',\n    borderWidth: 1,\n    flexDirection: 'row',\n    borderRadius: 3,\n    overflow: 'hidden',\n    backgroundColor: '#fff',\n    height: 40,\n  },\n  verticalContainer: {\n    flexDirection: 'column',\n    height: null,\n  },\n  verticalComponent: {\n    height: 40,\n  },\n  buttonText: (theme) => ({\n    fontSize: normalizeText(13),\n    color: theme.colors.grey2,\n    ...Platform.select({\n      android: {},\n      default: {\n        fontWeight: '500',\n      },\n    }),\n  }),\n  disabled: {\n    backgroundColor: 'transparent',\n  },\n  disabledText: (theme) => ({\n    color: color(theme.colors.disabled).darken(0.3).toString(),\n  }),\n  disabledSelected: (theme) => ({\n    backgroundColor: theme.colors.disabled,\n  }),\n};\n\nButtonGroup.propTypes = {\n  button: PropTypes.object,\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  buttons: PropTypes.array,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  textStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  selectedButtonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  underlayColor: PropTypes.string,\n  selectedIndex: PropTypes.number,\n  selectedIndexes: PropTypes.arrayOf(PropTypes.number),\n  activeOpacity: PropTypes.number,\n  onHideUnderlay: PropTypes.func,\n  onShowUnderlay: PropTypes.func,\n  setOpacityTo: PropTypes.func,\n  innerBorderStyle: PropTypes.shape({\n    color: PropTypes.string,\n    width: PropTypes.number,\n  }),\n  buttonStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  buttonContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  selectMultiple: PropTypes.bool,\n  theme: PropTypes.object,\n  disabled: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.arrayOf(PropTypes.number),\n  ]),\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledTextStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  disabledSelectedStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  disabledSelectedTextStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  vertical: PropTypes.bool,\n};\n\nButtonGroup.defaultProps = {\n  selectedIndex: null,\n  selectedIndexes: [],\n  selectMultiple: false,\n  disabled: false,\n  Component: Platform.select({\n    android: TouchableNativeFeedback,\n    default: TouchableOpacity,\n  }),\n  onPress: () => null,\n  vertical: false,\n};\n\nexport { ButtonGroup };\nexport default withTheme(ButtonGroup, 'ButtonGroup');\n"]},"metadata":{},"sourceType":"module"}