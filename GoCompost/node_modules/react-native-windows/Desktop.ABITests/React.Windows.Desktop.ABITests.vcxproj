<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\packages\Microsoft.Windows.CppWinRT.2.0.200316.3\build\native\Microsoft.Windows.CppWinRT.props" Condition="Exists('..\packages\Microsoft.Windows.CppWinRT.2.0.200316.3\build\native\Microsoft.Windows.CppWinRT.props')" />
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <CppWinRTOptimized>true</CppWinRTOptimized>
    <CppWinRTRootNamespaceAutoMerge>true</CppWinRTRootNamespaceAutoMerge>
    <CppWinRTGenerateWindowsMetadata>true</CppWinRTGenerateWindowsMetadata>
    <CppWinRTEnableReferenceProjection>true</CppWinRTEnableReferenceProjection>
    <ProjectGuid>{44DCED9B-9C4C-48FE-8545-0930192BBC16}</ProjectGuid>
    <ProjectName>React.Windows.Desktop.ABITests</ProjectName>
    <VCProjectVersion>16.0</VCProjectVersion>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>ReactWindowsDesktopABITests</RootNamespace>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <ProjectSubType>NativeUnitTestProject</ProjectSubType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <Import Project="$(ReactNativeWindowsDir)PropertySheets\React.Cpp.props" />
  <PropertyGroup Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <!-- Include Warnings.props after Microsoft.Cpp.props to change default WarningLevel -->
  <Import Project="$(ReactNativeWindowsDir)PropertySheets\Warnings.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <IncludePath>$(ReactNativeWindowsDir);$(IncludePath)</IncludePath>
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <SDLCheck>true</SDLCheck>
      <AdditionalIncludeDirectories>$(VCInstallDir)UnitTest\include;$(ReactNativeDir)\ReactCommon;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <UseFullPaths>true</UseFullPaths>
    </ClCompile>
    <Link>
      <AdditionalLibraryDirectories>$(VCInstallDir)UnitTest\lib;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Debug'">
    <ClCompile>
      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PrecompiledHeaderFile Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">pch.h</PrecompiledHeaderFile>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Release'">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ClCompile>
    <Link>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ProjectReference Include="..\Desktop.DLL\React.Windows.Desktop.DLL.vcxproj">
      <Project>{88BAB0FA-E1AC-4DA7-A30C-F91702A8EADB}</Project>
    </ProjectReference>
    <ProjectReference Include="..\IntegrationTests\React.Windows.IntegrationTests.vcxproj">
      <Project>{700A84FD-F92A-43F1-8D06-B0E0745DF9B5}</Project>
    </ProjectReference>
  </ItemGroup>
  <Target Name="SetCppWinRTReferences" AfterTargets="GetCppWinRTProjectWinMDReferences" BeforeTargets="CppWinRTMakeReferenceProjection" Returns="@(CppWinRTDynamicProjectWinMDReferences)">
    <ItemGroup>
      <!--
      To increase resilience against build configuration changes, we could try to obtain the .winmd
      path below from the Desktop.DLL project reference. The respective task should look similar to
      'GetTargetFileName' MSBuild task in the 'GetRNDllPath' target below (and potentially share
      build logic with it).
      -->
      <CppWinRTDynamicProjectWinMDReferences Include="$(OutputPath)..\React.Windows.Desktop\facebook.react.winmd">
        <WinMDPath>$(OutputPath)..\React.Windows.Desktop\facebook.react.winmd</WinMDPath>
      </CppWinRTDynamicProjectWinMDReferences>
    </ItemGroup>
  </Target>
  <Target Name="GetRNDllPath" BeforeTargets="ClCompile">
    <!--
    During test execution, we need to find react-native-win32.dll which has been built into a
    different target folder. The 'GetRNDllPath' build target passes the path to the DLL as a macro
    (RNDLLPATH) into the test code where it is intended to be used in a LoadLibrary call.
    -->
    <MSBuild Projects="%(ProjectReference.Identity)" Targets="GetTargetFileName" Condition="$([System.String]::Copy('%(ProjectReference.Filename)').Contains('React.Windows.Desktop.DLL'))">
      <Output TaskParameter="TargetOutputs" PropertyName="_RNDllPath" />
    </MSBuild>
    <!-- It seems that the CL task takes preprocessor definitions only from ClCompile.PreprocessorDefinitions item metadata. -->
    <ItemGroup>
      <_ClCompileTemp Include="@(ClCompile)" />
      <ClCompile Remove="@(ClCompile)" />
      <ClCompile Include="@(_ClCompileTemp)">
        <PreprocessorDefinitions>RNDLLPATH=LR"($(_RNDllPath))";%(_ClCompileTemp.PreprocessorDefinitions)</PreprocessorDefinitions>
      </ClCompile>
    </ItemGroup>
  </Target>
  <ItemGroup>
    <ClCompile Include="MemoryTrackerTests.cpp" />
    <ClCompile Include="MessageQueueShim.cpp" />
    <ClCompile Include="NativeLogEventTests.cpp" />
    <ClCompile Include="NativeTraceEventTests.cpp" />
    <ClCompile Include="ActivationFactory.cpp" />
    <ClCompile Include="pch.cpp">
      <PrecompiledHeader Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Create</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="PerfTests.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="MessageQueueShim.h" />
    <ClInclude Include="pch.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(SolutionDir)packages\Microsoft.Windows.CppWinRT.2.0.200316.3\build\native\Microsoft.Windows.CppWinRT.targets" Condition="Exists('$(SolutionDir)packages\Microsoft.Windows.CppWinRT.2.0.200316.3\build\native\Microsoft.Windows.CppWinRT.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)packages\Microsoft.Windows.CppWinRT.2.0.200316.3\build\native\Microsoft.Windows.CppWinRT.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)packages\Microsoft.Windows.CppWinRT.2.0.200316.3\build\native\Microsoft.Windows.CppWinRT.targets'))" />
  </Target>
</Project>