<?xml version="1.0" encoding="utf-8"?>
<Project>

  <!-- For build debugging purposes. -->
  <Target Name="Vars">
    <Message Text="General" />
    <Message Text="=> ApplicationType         [$(ApplicationType)]" />
    <Message Text="=> Configuration           [$(Configuration)]" />
    <Message Text="=> Platform                [$(Platform)]" />
    <Message Text="=> PlatformTarget          [$(PlatformTarget)]" />
    <Message Text="=> PlatformName            [$(PlatformName)]" />
    <Message Text="=> DefaultPlatformToolset  [$(DefaultPlatformToolset)]" />
    <Message Text="=> PlatformToolset         [$(PlatformToolset)]" />
    <Message Text="=> BaseIntDir              [$(BaseIntDir)]" />
    <Message Text="=> BaseOutDir              [$(BaseOutDir)]" />
    <Message Text="=> IntDir                  [$(IntDir)]" />
    <Message Text="=> OutDir                  [$(OutDir)]" />
    <Message Text="=> TargetDir               [$(TargetDir)]" />
    <Message Text="=> TargetPath              [$(TargetPath)]" />
    <Message Text="=> TLogLocation            [$(TLogLocation)]" />
    <Message Text="=> LastBuildUnsuccessful   [$(LastBuildUnsuccessful)]" />
    <Message Text="=> LastBuildState          [$(LastBuildState)]" />
    <Message Text="=> GeneratedFilesDir       [$(GeneratedFilesDir)]" />

    <Message Text="%0A" />
    <Message Text="Microsoft.CppBuild.targets/MakeDirsForCl" />
    <Message Text="=> PrecompiledHeaderOutputFile [@(CLCompile->Metadata('PrecompiledHeaderOutputFile')->DirectoryName()->Distinct())]" />
    <Message Text="=> AssemblerListingLocation    [@(CLCompile->Metadata('AssemblerListingLocation')->DirectoryName()->Distinct())]" />
    <Message Text="=> ObjectFileName              [@(CLCompile->Metadata('ObjectFileName')->DirectoryName()->Distinct())]" />
    <Message Text="=> ProgramDataBaseFileName     [@(CLCompile->Metadata('ProgramDataBaseFileName')->DirectoryName()->Distinct())]" />
    <Message Text="=> XMLDocumentationFileName    [@(CLCompile->Metadata('XMLDocumentationFileName')->DirectoryName()->Distinct())]" />
    <Message Text="=> BrowseInformationFile       [@(CLCompile->Metadata('BrowseInformationFile')->DirectoryName()->Distinct())]" />
    <Message Text="=> PreprocessOutputPath        [@(CLCompile->Metadata('PreprocessOutputPath')->DirectoryName()->Distinct())]" />
    <Message Text="=> ClDirsToMake                [@(ClDirsToMake)]" />

    <Message Text="%0A" />
    <Message Text="=> UnmergedWinmdDirectory  [$(UnmergedWinmdDirectory)]" />
    <Message Text="=> MergedWinmdDirectory    [$(MergedWinmdDirectory)]" />
    <Message Text="=> FollyDir                [$(FollyDir)]" />
    <Message Text="=> ReactNativeWindowsDir   [$(ReactNativeWindowsDir)]" />
    <Message Text="=> ReactNativeDir          [$(ReactNativeDir)]" />
    <Message Text="=> YogaDir                 [$(YogaDir)]" />
    <Message Text="=> ProjectHome             [$(ProjectHome)]" />
    <Message Text="=> UserRootDir             [$(UserRootDir)]" />
    <Message Text="=> MSBuildExtensionsPath   [$(MSBuildExtensionsPath)]" />
    <Message Text="=> MSBuildExtensionsPath32 [$(MSBuildExtensionsPath32)]" />
    <Message Text="=> MSBuildExtensionsPath64 [$(MSBuildExtensionsPath64)]" />
    <Message Text="=> VCTargetsPath           [$(VCTargetsPath)]" />
  </Target>

  <Target Name="_ComputePrecompToCleanUp">
    <ItemGroup>
      <PCHFileToClean Include="$(IntDir)\**\*.pch" />
      <_PCHFileToCleanWithTimestamp Include="@(PCHFileToClean)" Condition="'%(Identity)' != ''">
        <LastWriteTime>$([System.IO.File]::GetLastWriteTime('%(Identity)'))</LastWriteTime>
      </_PCHFileToCleanWithTimestamp>
    </ItemGroup>
  </Target>
  <!--
    As a cppwinrt project, .pch is very big, and delete it in pipeline after build
    Instead of outright deleting the PCHs, we want to trick the "project freshness detector" by
    emitting empty files that look suspiciously like the PCHs it's expecting.
    It's of utmost importance that their timestamps match up. -->
  <Target Name="CleanUpPrecompHeaders"
          DependsOnTargets="_ComputePrecompToCleanUp"
          AfterTargets="AfterBuild"
          Condition="'$(AGENT_ID)' != ''">
    <!-- We just need to keep *ReactNativeWindows*'s PCHs because they get rebuilt more often. -->
    <Delete Files="@(_PCHFileToCleanWithTimestamp)"/>
    <Touch Files="@(_PCHFileToCleanWithTimestamp)" Time="%(LastWriteTime)" AlwaysCreate="true" />
    <Message Text="PCH and Precomp object @(_PCHFileToCleanWithTimestamp) has been deleted for $(ProjectName)." />
  </Target>
</Project>