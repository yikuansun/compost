{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/biofanat/Documents/GitHub/compost/newFrontendBo/node_modules/react-native-numeric-input/NumericInput/NumericInput.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport Button from \"../Button\";\nimport PropTypes from 'prop-types';\nimport { create, PREDEF_RES } from 'react-native-pixel-perfect';\nvar calcSize = create(PREDEF_RES.iphone7.px);\n\nvar NumericInput = function (_Component) {\n  _inherits(NumericInput, _Component);\n\n  var _super = _createSuper(NumericInput);\n\n  function NumericInput(props) {\n    var _this;\n\n    _classCallCheck(this, NumericInput);\n\n    _this = _super.call(this, props);\n\n    _this.updateBaseResolution = function (width, height) {\n      calcSize = create({\n        width: width,\n        height: height\n      });\n    };\n\n    _this.inc = function () {\n      var value = _this.props.value && typeof _this.props.value === 'number' ? _this.props.value : _this.state.value;\n\n      if (_this.props.maxValue === null || value + _this.props.step < _this.props.maxValue) {\n        value = (value + _this.props.step).toFixed(12);\n        value = _this.props.valueType === 'real' ? parseFloat(value) : parseInt(value);\n      } else if (_this.props.maxValue !== null) {\n        _this.props.onLimitReached(true, 'Reached Maximum Value!');\n\n        value = _this.props.maxValue;\n      }\n\n      if (value !== _this.props.value || value === 0) _this.props.onChange && _this.props.onChange(Number(value));\n\n      _this.setState({\n        value: value,\n        stringValue: value.toString()\n      });\n    };\n\n    _this.dec = function () {\n      var value = _this.props.value && typeof _this.props.value === 'number' ? _this.props.value : _this.state.value;\n\n      if (_this.props.minValue === null || value - _this.props.step > _this.props.minValue) {\n        value = (value - _this.props.step).toFixed(12);\n        value = _this.props.valueType === 'real' ? parseFloat(value) : parseInt(value);\n      } else if (_this.props.minValue !== null) {\n        _this.props.onLimitReached(false, 'Reached Minimum Value!');\n\n        value = _this.props.minValue;\n      }\n\n      if (value !== _this.props.value || value === 0) _this.props.onChange && _this.props.onChange(Number(value));\n\n      _this.setState({\n        value: value,\n        stringValue: value.toString()\n      });\n    };\n\n    _this.isLegalValue = function (value, mReal, mInt) {\n      return value === '' || (_this.props.valueType === 'real' && mReal(value) || _this.props.valueType !== 'real' && mInt(value)) && (_this.props.maxValue === null || parseFloat(value) <= _this.props.maxValue) && (_this.props.minValue === null || parseFloat(value) >= _this.props.minValue);\n    };\n\n    _this.realMatch = function (value) {\n      return value && value.match(/-?\\d+(\\.(\\d+)?)?/) && value.match(/-?\\d+(\\.(\\d+)?)?/)[0] === value.match(/-?\\d+(\\.(\\d+)?)?/).input;\n    };\n\n    _this.intMatch = function (value) {\n      return value && value.match(/-?\\d+/) && value.match(/-?\\d+/)[0] === value.match(/-?\\d+/).input;\n    };\n\n    _this.onChange = function (value) {\n      var currValue = typeof _this.props.value === 'number' ? _this.props.value : _this.state.value;\n\n      if (value.length === 1 && value === '-' || value.length === 2 && value === '0-') {\n        _this.setState({\n          stringValue: '-'\n        });\n\n        return;\n      }\n\n      if (value.length === 1 && value === '.' || value.length === 2 && value === '0.') {\n        _this.setState({\n          stringValue: '0.'\n        });\n\n        return;\n      }\n\n      if (value.charAt(value.length - 1) === '.') {\n        _this.setState({\n          stringValue: value\n        });\n\n        return;\n      }\n\n      var legal = _this.isLegalValue(value, _this.realMatch, _this.intMatch);\n\n      if (legal) {\n        _this.setState({\n          lastValid: value\n        });\n      }\n\n      if (!legal && !_this.props.validateOnBlur) {\n        if (_this.ref) {\n          _this.ref.blur();\n\n          setTimeout(function () {\n            _this.ref.clear();\n\n            setTimeout(function () {\n              _this.props.onChange && _this.props.onChange(currValue - 1);\n\n              _this.setState({\n                value: currValue - 1\n              }, function () {\n                _this.setState({\n                  value: currValue,\n                  legal: legal\n                });\n\n                _this.props.onChange && _this.props.onChange(currValue);\n              });\n            }, 10);\n          }, 15);\n          setTimeout(function () {\n            return _this.ref.focus();\n          }, 20);\n        }\n      } else if (!legal && _this.props.validateOnBlur) {\n        _this.setState({\n          stringValue: value\n        });\n\n        var parsedValue = _this.props.valueType === 'real' ? parseFloat(value) : parseInt(value);\n        parsedValue = isNaN(parsedValue) ? 0 : parsedValue;\n        if (parsedValue !== _this.props.value) _this.props.onChange && _this.props.onChange(parsedValue);\n\n        _this.setState({\n          value: parsedValue,\n          legal: legal,\n          stringValue: parsedValue.toString()\n        });\n      } else {\n        _this.setState({\n          stringValue: value\n        });\n\n        var _parsedValue = _this.props.valueType === 'real' ? parseFloat(value) : parseInt(value);\n\n        _parsedValue = isNaN(_parsedValue) ? 0 : _parsedValue;\n        if (_parsedValue !== _this.props.value) _this.props.onChange && _this.props.onChange(_parsedValue);\n\n        _this.setState({\n          value: _parsedValue,\n          legal: legal,\n          stringValue: _parsedValue.toString()\n        });\n      }\n    };\n\n    _this.onBlur = function () {\n      var match = _this.state.stringValue.match(/-?[0-9]\\d*(\\.\\d+)?/);\n\n      var legal = match && match[0] === match.input && (_this.props.maxValue === null || parseFloat(_this.state.stringValue) <= _this.props.maxValue) && (_this.props.minValue === null || parseFloat(_this.state.stringValue) >= _this.props.minValue);\n\n      if (!legal) {\n        if (_this.props.minValue !== null && parseFloat(_this.state.stringValue) <= _this.props.minValue) {\n          _this.props.onLimitReached(true, 'Reached Minimum Value!');\n        }\n\n        if (_this.props.maxValue !== null && parseFloat(_this.state.stringValue) >= _this.props.maxValue) {\n          _this.props.onLimitReached(false, 'Reached Maximum Value!');\n        }\n\n        if (_this.ref) {\n          _this.ref.blur();\n\n          setTimeout(function () {\n            _this.ref.clear();\n\n            setTimeout(function () {\n              _this.props.onChange && _this.props.onChange(_this.state.lastValid);\n\n              _this.setState({\n                value: _this.state.lastValid\n              }, function () {\n                _this.setState({\n                  value: _this.state.lastValid,\n                  stringValue: _this.state.lastValid.toString()\n                });\n\n                _this.props.onChange && _this.props.onChange(_this.state.lastValid);\n              });\n            }, 10);\n          }, 15);\n          setTimeout(function () {\n            return _this.ref.focus();\n          }, 50);\n        }\n      }\n\n      _this.props.onBlur && _this.props.onBlur();\n    };\n\n    _this.onFocus = function () {\n      _this.setState({\n        lastValid: _this.state.value\n      });\n\n      _this.props.onFocus && _this.props.onFocus();\n    };\n\n    var noInitSent = props.initValue !== 0 && !props.initValue;\n    _this.state = {\n      value: noInitSent ? props.value ? props.value : 0 : props.initValue,\n      lastValid: noInitSent ? props.value ? props.value : 0 : props.initValue,\n      stringValue: (noInitSent ? props.value ? props.value : 0 : props.initValue).toString()\n    };\n    _this.ref = null;\n    return _this;\n  }\n\n  _createClass(NumericInput, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(props) {\n      var initSent = !(props.initValue !== 0 && !props.initValue);\n\n      if (props.initValue !== this.state.value && initSent) {\n        this.setState({\n          value: props.initValue,\n          lastValid: props.initValue,\n          stringValue: props.initValue.toString()\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var editable = this.props.editable;\n      var sepratorWidth = typeof this.props.separatorWidth === 'undefined' ? this.props.sepratorWidth : this.props.separatorWidth;\n      var borderColor = this.props.borderColor;\n      var iconStyle = [style.icon, this.props.iconStyle];\n      var totalWidth = this.props.totalWidth;\n      var totalHeight = this.props.totalHeight ? this.props.totalHeight : totalWidth * 0.4;\n      var inputWidth = this.props.type === 'up-down' ? totalWidth * 0.6 : totalWidth * 0.4;\n      var borderRadiusTotal = totalHeight * 0.18;\n      var fontSize = totalHeight * 0.38;\n      var textColor = this.props.textColor;\n      var maxReached = this.state.value === this.props.maxValue;\n      var minReached = this.state.value === this.props.minValue;\n      var inputContainerStyle = this.props.type === 'up-down' ? [style.inputContainerUpDown, {\n        width: totalWidth,\n        height: totalHeight,\n        borderColor: borderColor\n      }, this.props.rounded ? {\n        borderRadius: borderRadiusTotal\n      } : {}, this.props.containerStyle] : [style.inputContainerPlusMinus, {\n        width: totalWidth,\n        height: totalHeight,\n        borderColor: borderColor\n      }, this.props.rounded ? {\n        borderRadius: borderRadiusTotal\n      } : {}, this.props.containerStyle];\n      var inputStyle = this.props.type === 'up-down' ? [style.inputUpDown, {\n        width: inputWidth,\n        height: totalHeight,\n        fontSize: fontSize,\n        color: textColor,\n        borderRightWidth: 2,\n        borderRightColor: borderColor\n      }, this.props.inputStyle] : [style.inputPlusMinus, {\n        width: inputWidth,\n        height: totalHeight,\n        fontSize: fontSize,\n        color: textColor,\n        borderRightWidth: sepratorWidth,\n        borderLeftWidth: sepratorWidth,\n        borderLeftColor: borderColor,\n        borderRightColor: borderColor\n      }, this.props.inputStyle];\n      var upDownStyle = [{\n        alignItems: 'center',\n        width: totalWidth - inputWidth,\n        backgroundColor: this.props.upDownButtonsBackgroundColor,\n        borderRightWidth: 1,\n        borderRightColor: borderColor\n      }, this.props.rounded ? {\n        borderTopRightRadius: borderRadiusTotal,\n        borderBottomRightRadius: borderRadiusTotal\n      } : {}];\n      var rightButtonStyle = [{\n        position: 'absolute',\n        zIndex: -1,\n        right: 0,\n        height: totalHeight - 2,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderWidth: 0,\n        backgroundColor: this.props.rightButtonBackgroundColor,\n        width: (totalWidth - inputWidth) / 2\n      }, this.props.rounded ? {\n        borderTopRightRadius: borderRadiusTotal,\n        borderBottomRightRadius: borderRadiusTotal\n      } : {}];\n      var leftButtonStyle = [{\n        position: 'absolute',\n        zIndex: -1,\n        left: 0,\n        height: totalHeight - 2,\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: this.props.leftButtonBackgroundColor,\n        width: (totalWidth - inputWidth) / 2,\n        borderWidth: 0\n      }, this.props.rounded ? {\n        borderTopLeftRadius: borderRadiusTotal,\n        borderBottomLeftRadius: borderRadiusTotal\n      } : {}];\n      var inputWraperStyle = {\n        alignSelf: 'center',\n        borderLeftColor: borderColor,\n        borderLeftWidth: sepratorWidth,\n        borderRightWidth: sepratorWidth,\n        borderRightColor: borderColor\n      };\n      if (this.props.type === 'up-down') return React.createElement(View, {\n        style: inputContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, _extends({}, this.props.extraTextInputProps, {\n        editable: editable,\n        returnKeyType: \"done\",\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        keyboardType: \"numeric\",\n        value: this.state.stringValue,\n        onChangeText: this.onChange,\n        style: inputStyle,\n        ref: function ref(_ref) {\n          return _this2.ref = _ref;\n        },\n        onBlur: this.onBlur,\n        onFocus: this.onFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: upDownStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, React.createElement(Button, {\n        onPress: this.inc,\n        style: {\n          flex: 1,\n          width: '100%',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-arrow-up\",\n        size: fontSize,\n        style: [].concat(iconStyle, [maxReached ? this.props.reachMaxIncIconStyle : {}, minReached ? this.props.reachMinIncIconStyle : {}]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 29\n        }\n      })), React.createElement(Button, {\n        onPress: this.dec,\n        style: {\n          flex: 1,\n          width: '100%',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, React.createElement(Icon, {\n        name: \"ios-arrow-down\",\n        size: fontSize,\n        style: [].concat(iconStyle, [maxReached ? this.props.reachMaxDecIconStyle : {}, minReached ? this.props.reachMinDecIconStyle : {}]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }))));else return React.createElement(View, {\n        style: inputContainerStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      }, React.createElement(Button, {\n        onPress: this.dec,\n        style: leftButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"md-remove\",\n        size: fontSize,\n        style: [].concat(iconStyle, [maxReached ? this.props.reachMaxDecIconStyle : {}, minReached ? this.props.reachMinDecIconStyle : {}]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: [inputWraperStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, _extends({}, this.props.extraTextInputProps, {\n        editable: editable,\n        returnKeyType: \"done\",\n        underlineColorAndroid: \"rgba(0,0,0,0)\",\n        keyboardType: \"numeric\",\n        value: this.state.stringValue,\n        onChangeText: this.onChange,\n        style: inputStyle,\n        ref: function ref(_ref2) {\n          return _this2.ref = _ref2;\n        },\n        onBlur: this.onBlur,\n        onFocus: this.onFocus,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }\n      }))), React.createElement(Button, {\n        onPress: this.inc,\n        style: rightButtonStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      }, React.createElement(Icon, {\n        name: \"md-add\",\n        size: fontSize,\n        style: [].concat(iconStyle, [maxReached ? this.props.reachMaxIncIconStyle : {}, minReached ? this.props.reachMinIncIconStyle : {}]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return NumericInput;\n}(Component);\n\nexport { NumericInput as default };\nvar style = StyleSheet.create({\n  seprator: {\n    backgroundColor: 'grey',\n    height: calcSize(80)\n  },\n  inputContainerUpDown: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    borderColor: 'grey',\n    borderWidth: 1\n  },\n  inputContainerPlusMinus: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1\n  },\n  inputUpDown: {\n    textAlign: 'center',\n    padding: 0\n  },\n  inputPlusMinus: {\n    textAlign: 'center',\n    padding: 0\n  },\n  icon: {\n    fontWeight: '900',\n    backgroundColor: 'rgba(0,0,0,0)'\n  },\n  upDown: {\n    alignItems: 'center',\n    paddingRight: calcSize(15)\n  }\n});\nNumericInput.propTypes = {\n  iconSize: PropTypes.number,\n  borderColor: PropTypes.string,\n  iconStyle: PropTypes.any,\n  totalWidth: PropTypes.number,\n  totalHeight: PropTypes.number,\n  sepratorWidth: PropTypes.number,\n  type: PropTypes.oneOf(['up-down', 'plus-minus']),\n  valueType: PropTypes.oneOf(['real', 'integer']),\n  rounded: PropTypes.any,\n  textColor: PropTypes.string,\n  containerStyle: PropTypes.any,\n  inputStyle: PropTypes.any,\n  initValue: PropTypes.number,\n  onChange: PropTypes.func.isRequired,\n  onLimitReached: PropTypes.func,\n  value: PropTypes.number,\n  minValue: PropTypes.number,\n  maxValue: PropTypes.number,\n  step: PropTypes.number,\n  upDownButtonsBackgroundColor: PropTypes.string,\n  rightButtonBackgroundColor: PropTypes.string,\n  leftButtonBackgroundColor: PropTypes.string,\n  editable: PropTypes.bool,\n  reachMaxIncIconStyle: PropTypes.any,\n  reachMaxDecIconStyle: PropTypes.any,\n  reachMinIncIconStyle: PropTypes.any,\n  reachMinDecIconStyle: PropTypes.any,\n  extraTextInputProps: PropTypes.any\n};\nNumericInput.defaultProps = {\n  iconSize: calcSize(30),\n  borderColor: '#d4d4d4',\n  iconStyle: {},\n  totalWidth: calcSize(220),\n  sepratorWidth: 1,\n  type: 'plus-minus',\n  rounded: false,\n  textColor: 'black',\n  containerStyle: {},\n  inputStyle: {},\n  initValue: null,\n  valueType: 'integer',\n  value: null,\n  minValue: null,\n  maxValue: null,\n  step: 1,\n  upDownButtonsBackgroundColor: 'white',\n  rightButtonBackgroundColor: 'white',\n  leftButtonBackgroundColor: 'white',\n  editable: true,\n  validateOnBlur: true,\n  reachMaxIncIconStyle: {},\n  reachMaxDecIconStyle: {},\n  reachMinIncIconStyle: {},\n  reachMinDecIconStyle: {},\n  onLimitReached: function onLimitReached(isMax, msg) {},\n  extraTextInputProps: {}\n};","map":{"version":3,"sources":["/Users/biofanat/Documents/GitHub/compost/newFrontendBo/node_modules/react-native-numeric-input/NumericInput/NumericInput.js"],"names":["React","Component","Icon","Button","PropTypes","create","PREDEF_RES","calcSize","iphone7","px","NumericInput","props","updateBaseResolution","width","height","inc","value","state","maxValue","step","toFixed","valueType","parseFloat","parseInt","onLimitReached","onChange","Number","setState","stringValue","toString","dec","minValue","isLegalValue","mReal","mInt","realMatch","match","input","intMatch","currValue","length","charAt","legal","lastValid","validateOnBlur","ref","blur","setTimeout","clear","focus","parsedValue","isNaN","onBlur","onFocus","noInitSent","initValue","initSent","editable","sepratorWidth","separatorWidth","borderColor","iconStyle","style","icon","totalWidth","totalHeight","inputWidth","type","borderRadiusTotal","fontSize","textColor","maxReached","minReached","inputContainerStyle","inputContainerUpDown","rounded","borderRadius","containerStyle","inputContainerPlusMinus","inputStyle","inputUpDown","color","borderRightWidth","borderRightColor","inputPlusMinus","borderLeftWidth","borderLeftColor","upDownStyle","alignItems","backgroundColor","upDownButtonsBackgroundColor","borderTopRightRadius","borderBottomRightRadius","rightButtonStyle","position","zIndex","right","justifyContent","borderWidth","rightButtonBackgroundColor","leftButtonStyle","left","leftButtonBackgroundColor","borderTopLeftRadius","borderBottomLeftRadius","inputWraperStyle","alignSelf","extraTextInputProps","flex","reachMaxIncIconStyle","reachMinIncIconStyle","reachMaxDecIconStyle","reachMinDecIconStyle","StyleSheet","seprator","flexDirection","textAlign","padding","fontWeight","upDown","paddingRight","propTypes","iconSize","number","string","any","oneOf","func","isRequired","bool","defaultProps","isMax","msg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { View, TextInput, StyleSheet, Text } from 'react-native'\nimport Icon from 'react-native-vector-icons/Ionicons'\nimport Button from '../Button'\nimport PropTypes from 'prop-types'\nimport { create, PREDEF_RES } from 'react-native-pixel-perfect'\n\nlet calcSize = create(PREDEF_RES.iphone7.px)\n\nexport default class NumericInput extends Component {\n    constructor(props) {\n        super(props)\n        const noInitSent = props.initValue !== 0 && !props.initValue\n        this.state = {\n            value: noInitSent ? props.value ? props.value : 0 : props.initValue,\n            lastValid: noInitSent ? props.value ? props.value : 0 : props.initValue,\n            stringValue: (noInitSent ? props.value ? props.value : 0 : props.initValue).toString(),\n        }\n        this.ref = null\n    }\n    componentWillReceiveProps(props) {\n        const initSent = !(props.initValue !== 0 && !props.initValue)\n        if (props.initValue !== this.state.value && initSent) {\n\n            this.setState({\n                value: props.initValue,\n                lastValid: props.initValue,\n                stringValue: props.initValue.toString()\n            });\n        }\n    }\n    updateBaseResolution = (width, height) => {\n        calcSize = create({ width, height })\n    }\n    inc = () => {\n        let value = this.props.value && (typeof this.props.value === 'number') ? this.props.value : this.state.value\n        if (this.props.maxValue === null || (value + this.props.step < this.props.maxValue)) {\n            value = (value + this.props.step).toFixed(12)\n            value = this.props.valueType === 'real' ? parseFloat(value) : parseInt(value)\n        } else if (this.props.maxValue !== null) {\n            this.props.onLimitReached(true, 'Reached Maximum Value!')\n            value = this.props.maxValue\n        }\n        if (value !== this.props.value || value === 0)\n            this.props.onChange && this.props.onChange(Number(value))\n        this.setState({ value, stringValue: value.toString() })\n\n    }\n    dec = () => {\n        let value = this.props.value && (typeof this.props.value === 'number') ? this.props.value : this.state.value\n        if (this.props.minValue === null || (value - this.props.step > this.props.minValue)) {\n            value = (value - this.props.step).toFixed(12)\n            value = this.props.valueType === 'real' ? parseFloat(value) : parseInt(value)\n        } else if (this.props.minValue !== null) {\n            this.props.onLimitReached(false, 'Reached Minimum Value!')\n            value = this.props.minValue\n        }\n        if (value !== this.props.value || value === 0)\n            this.props.onChange && this.props.onChange(Number(value))\n        this.setState({ value, stringValue: value.toString() })\n    }\n    isLegalValue = (value, mReal, mInt) => value === '' || (((this.props.valueType === 'real' && mReal(value)) || (this.props.valueType !== 'real' && mInt(value))) && (this.props.maxValue === null || (parseFloat(value) <= this.props.maxValue)) && (this.props.minValue === null || (parseFloat(value) >= this.props.minValue)))\n\n    realMatch = (value) => value && value.match(/-?\\d+(\\.(\\d+)?)?/) && value.match(/-?\\d+(\\.(\\d+)?)?/)[0] === value.match(/-?\\d+(\\.(\\d+)?)?/).input\n\n    intMatch = (value) => value && value.match(/-?\\d+/) && value.match(/-?\\d+/)[0] === value.match(/-?\\d+/).input\n\n    onChange = (value) => {\n        let currValue = typeof this.props.value === 'number' ? this.props.value : this.state.value\n        if ((value.length === 1 && value === '-') || (value.length === 2 && value === '0-')) {\n            this.setState({ stringValue: '-' })\n            return\n        }\n        if ((value.length === 1 && value === '.') || (value.length === 2 && value === '0.')) {\n            this.setState({ stringValue: '0.' })\n            return\n        }\n        if ((value.charAt(value.length - 1) === '.')) {\n            this.setState({ stringValue: value })\n            return\n        }\n        let legal = this.isLegalValue(value, this.realMatch, this.intMatch)\n        if (legal) {\n            this.setState({ lastValid: value })\n        }\n        if (!legal && !this.props.validateOnBlur) {\n            if (this.ref) {\n                this.ref.blur()\n                setTimeout(() => {\n                    this.ref.clear()\n                    setTimeout(() => {\n                        this.props.onChange && this.props.onChange(currValue - 1)\n                        this.setState({ value: currValue - 1 }, () => {\n                            this.setState({ value: currValue, legal })\n                            this.props.onChange && this.props.onChange(currValue)\n                        })\n                    }, 10)\n                }, 15)\n                setTimeout(() => this.ref.focus(), 20)\n            }\n\n        } else if (!legal && this.props.validateOnBlur) {\n            this.setState({ stringValue: value })\n            let parsedValue = this.props.valueType === 'real' ? parseFloat(value) : parseInt(value)\n            parsedValue = isNaN(parsedValue) ? 0 : parsedValue\n            if (parsedValue !== this.props.value)\n                this.props.onChange && this.props.onChange(parsedValue)\n            this.setState({ value: parsedValue, legal, stringValue: parsedValue.toString() })\n        } else {\n            this.setState({ stringValue: value })\n            let parsedValue = this.props.valueType === 'real' ? parseFloat(value) : parseInt(value)\n            parsedValue = isNaN(parsedValue) ? 0 : parsedValue\n            if (parsedValue !== this.props.value)\n                this.props.onChange && this.props.onChange(parsedValue)\n            this.setState({ value: parsedValue, legal, stringValue: parsedValue.toString() })\n\n        }\n    }\n    onBlur = () => {\n\n        let match = this.state.stringValue.match(/-?[0-9]\\d*(\\.\\d+)?/)\n        let legal = match && match[0] === match.input && ((this.props.maxValue === null || (parseFloat(this.state.stringValue) <= this.props.maxValue)) && (this.props.minValue === null || (parseFloat(this.state.stringValue) >= this.props.minValue)))\n        if (!legal) {\n            if (this.props.minValue !== null && (parseFloat(this.state.stringValue) <= this.props.minValue)) {\n                this.props.onLimitReached(true, 'Reached Minimum Value!')\n            }\n            if (this.props.maxValue !== null && (parseFloat(this.state.stringValue) >= this.props.maxValue)) {\n                this.props.onLimitReached(false, 'Reached Maximum Value!')\n            }\n            if (this.ref) {\n                this.ref.blur()\n                setTimeout(() => {\n                    this.ref.clear()\n                    setTimeout(() => {\n                        this.props.onChange && this.props.onChange(this.state.lastValid)\n                        this.setState({ value: this.state.lastValid }, () => {\n                            this.setState({ value: this.state.lastValid, stringValue: this.state.lastValid.toString() })\n                            this.props.onChange && this.props.onChange(this.state.lastValid)\n                        })\n                    }, 10)\n                }, 15)\n                setTimeout(() => this.ref.focus(), 50)\n            }\n        }\n        this.props.onBlur && this.props.onBlur()\n    }\n\n    onFocus = () => {\n        this.setState({ lastValid: this.state.value })\n        this.props.onFocus && this.props.onFocus()\n    }\n\n    render() {\n        const editable = this.props.editable\n        const sepratorWidth = (typeof this.props.separatorWidth === 'undefined') ? this.props.sepratorWidth : this.props.separatorWidth;//supporting old property name sepratorWidth\n        const borderColor = this.props.borderColor\n        const iconStyle = [style.icon, this.props.iconStyle]\n        const totalWidth = this.props.totalWidth\n        const totalHeight = this.props.totalHeight ? this.props.totalHeight : (totalWidth * 0.4)\n        const inputWidth = this.props.type === 'up-down' ? (totalWidth * 0.6) : (totalWidth * 0.4)\n        const borderRadiusTotal = totalHeight * 0.18\n        const fontSize = totalHeight * 0.38\n        const textColor = this.props.textColor\n        const maxReached = this.state.value === this.props.maxValue\n        const minReached = this.state.value === this.props.minValue\n        const inputContainerStyle = this.props.type === 'up-down' ?\n            [style.inputContainerUpDown, { width: totalWidth, height: totalHeight, borderColor: borderColor }, this.props.rounded ? { borderRadius: borderRadiusTotal } : {}, this.props.containerStyle] :\n            [style.inputContainerPlusMinus, { width: totalWidth, height: totalHeight, borderColor: borderColor }, this.props.rounded ? { borderRadius: borderRadiusTotal } : {}, this.props.containerStyle]\n        const inputStyle = this.props.type === 'up-down' ?\n            [style.inputUpDown, { width: inputWidth, height: totalHeight, fontSize: fontSize, color: textColor, borderRightWidth: 2, borderRightColor: borderColor }, this.props.inputStyle] :\n            [style.inputPlusMinus, { width: inputWidth, height: totalHeight, fontSize: fontSize, color: textColor, borderRightWidth: sepratorWidth, borderLeftWidth: sepratorWidth, borderLeftColor: borderColor, borderRightColor: borderColor }, this.props.inputStyle]\n        const upDownStyle = [{ alignItems: 'center', width: totalWidth - inputWidth, backgroundColor: this.props.upDownButtonsBackgroundColor, borderRightWidth: 1, borderRightColor: borderColor }, this.props.rounded ? { borderTopRightRadius: borderRadiusTotal, borderBottomRightRadius: borderRadiusTotal } : {}]\n        const rightButtonStyle = [\n            {\n                position: 'absolute',\n                zIndex: -1,\n                right: 0,\n                height: totalHeight - 2,\n                justifyContent: 'center',\n                alignItems: 'center',\n                borderWidth: 0,\n                backgroundColor: this.props.rightButtonBackgroundColor,\n                width: (totalWidth - inputWidth) / 2\n            },\n            this.props.rounded ?\n                {\n                    borderTopRightRadius: borderRadiusTotal,\n                    borderBottomRightRadius: borderRadiusTotal\n                }\n                : {}]\n        const leftButtonStyle = [\n            {\n                position: 'absolute',\n                zIndex: -1,\n                left: 0,\n                height: totalHeight - 2,\n                justifyContent: 'center',\n                alignItems: 'center',\n                backgroundColor: this.props.leftButtonBackgroundColor,\n                width: (totalWidth - inputWidth) / 2,\n                borderWidth: 0\n            },\n            this.props.rounded ?\n                { borderTopLeftRadius: borderRadiusTotal, borderBottomLeftRadius: borderRadiusTotal }\n                : {}]\n        const inputWraperStyle = {\n            alignSelf: 'center',\n            borderLeftColor: borderColor,\n            borderLeftWidth: sepratorWidth,\n            borderRightWidth: sepratorWidth,\n            borderRightColor: borderColor\n        }\n        if (this.props.type === 'up-down')\n            return (\n                <View style={inputContainerStyle}>\n                    <TextInput {...this.props.extraTextInputProps} editable={editable} returnKeyType='done' underlineColorAndroid='rgba(0,0,0,0)' keyboardType='numeric' value={this.state.stringValue} onChangeText={this.onChange} style={inputStyle} ref={ref => this.ref = ref} onBlur={this.onBlur} onFocus={this.onFocus} />\n                    <View style={upDownStyle}>\n                        <Button onPress={this.inc} style={{ flex: 1, width: '100%', alignItems: 'center' }}>\n                            <Icon name='ios-arrow-up' size={fontSize} style={[...iconStyle, maxReached ? this.props.reachMaxIncIconStyle : {}, minReached ? this.props.reachMinIncIconStyle : {}]} />\n                        </Button>\n                        <Button onPress={this.dec} style={{ flex: 1, width: '100%', alignItems: 'center' }}>\n                            <Icon name='ios-arrow-down' size={fontSize} style={[...iconStyle, maxReached ? this.props.reachMaxDecIconStyle : {}, minReached ? this.props.reachMinDecIconStyle : {}]} />\n                        </Button>\n                    </View>\n                </View>)\n        else return (\n            <View style={inputContainerStyle}>\n                <Button onPress={this.dec} style={leftButtonStyle}>\n                    <Icon name='md-remove' size={fontSize} style={[...iconStyle, maxReached ? this.props.reachMaxDecIconStyle : {}, minReached ? this.props.reachMinDecIconStyle : {}]} />\n                </Button>\n                <View style={[inputWraperStyle]}>\n                    <TextInput {...this.props.extraTextInputProps} editable={editable} returnKeyType='done' underlineColorAndroid='rgba(0,0,0,0)' keyboardType='numeric' value={this.state.stringValue} onChangeText={this.onChange} style={inputStyle} ref={ref => this.ref = ref} onBlur={this.onBlur} onFocus={this.onFocus} />\n                </View>\n                <Button onPress={this.inc} style={rightButtonStyle}>\n                    <Icon name='md-add' size={fontSize} style={[...iconStyle, maxReached ? this.props.reachMaxIncIconStyle : {}, minReached ? this.props.reachMinIncIconStyle : {}]} />\n                </Button>\n            </View>)\n\n\n    }\n}\n\nconst style = StyleSheet.create({\n    seprator: {\n        backgroundColor: 'grey',\n        height: calcSize(80),\n    },\n    inputContainerUpDown: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n\n        borderColor: 'grey',\n        borderWidth: 1\n    },\n    inputContainerPlusMinus: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1\n    },\n    inputUpDown: {\n        textAlign: 'center',\n        padding: 0\n\n    },\n    inputPlusMinus: {\n        textAlign: 'center',\n        padding: 0\n    },\n    icon: {\n        fontWeight: '900',\n        backgroundColor: 'rgba(0,0,0,0)'\n    },\n    upDown: {\n        alignItems: 'center',\n        paddingRight: calcSize(15)\n    }\n})\nNumericInput.propTypes = {\n    iconSize: PropTypes.number,\n    borderColor: PropTypes.string,\n    iconStyle: PropTypes.any,\n    totalWidth: PropTypes.number,\n    totalHeight: PropTypes.number,\n    sepratorWidth: PropTypes.number,\n    type: PropTypes.oneOf(['up-down', 'plus-minus']),\n    valueType: PropTypes.oneOf(['real', 'integer']),\n    rounded: PropTypes.any,\n    textColor: PropTypes.string,\n    containerStyle: PropTypes.any,\n    inputStyle: PropTypes.any,\n    initValue: PropTypes.number,\n    onChange: PropTypes.func.isRequired,\n    onLimitReached: PropTypes.func,\n    value: PropTypes.number,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    step: PropTypes.number,\n    upDownButtonsBackgroundColor: PropTypes.string,\n    rightButtonBackgroundColor: PropTypes.string,\n    leftButtonBackgroundColor: PropTypes.string,\n    editable: PropTypes.bool,\n    reachMaxIncIconStyle: PropTypes.any,\n    reachMaxDecIconStyle: PropTypes.any,\n    reachMinIncIconStyle: PropTypes.any,\n    reachMinDecIconStyle: PropTypes.any,\n    extraTextInputProps: PropTypes.any\n}\nNumericInput.defaultProps = {\n    iconSize: calcSize(30),\n    borderColor: '#d4d4d4',\n    iconStyle: {},\n    totalWidth: calcSize(220),\n    sepratorWidth: 1,\n    type: 'plus-minus',\n    rounded: false,\n    textColor: 'black',\n    containerStyle: {},\n    inputStyle: {},\n    initValue: null,\n    valueType: 'integer',\n    value: null,\n    minValue: null,\n    maxValue: null,\n    step: 1,\n    upDownButtonsBackgroundColor: 'white',\n    rightButtonBackgroundColor: 'white',\n    leftButtonBackgroundColor: 'white',\n    editable: true,\n    validateOnBlur: true,\n    reachMaxIncIconStyle: {},\n    reachMaxDecIconStyle: {},\n    reachMinIncIconStyle: {},\n    reachMinDecIconStyle: {},\n    onLimitReached: (isMax, msg) => { },\n    extraTextInputProps: {}\n\n}\n"]},"metadata":{},"sourceType":"module"}