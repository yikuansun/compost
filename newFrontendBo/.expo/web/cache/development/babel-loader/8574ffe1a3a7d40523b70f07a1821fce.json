{"ast":null,"code":"'use strict';\n\nimport NativeSourceCode from \"../../NativeModules/specs/NativeSourceCode\";\n\nvar _cachedDevServerURL;\n\nvar FALLBACK = 'http://localhost:8081/';\n\nfunction getDevServer() {\n  if (_cachedDevServerURL === undefined) {\n    var match = NativeSourceCode.getConstants().scriptURL.match(/^https?:\\/\\/.*?\\//);\n    _cachedDevServerURL = match ? match[0] : null;\n  }\n\n  return {\n    url: _cachedDevServerURL || FALLBACK,\n    bundleLoadedFromServer: _cachedDevServerURL !== null\n  };\n}\n\nmodule.exports = getDevServer;","map":{"version":3,"sources":["/Users/biofanat/Documents/GitHub/compost/newFrontendBo/node_modules/react-native/Libraries/Core/Devtools/getDevServer.js"],"names":["NativeSourceCode","_cachedDevServerURL","FALLBACK","getDevServer","undefined","match","getConstants","scriptURL","url","bundleLoadedFromServer","module","exports"],"mappings":"AAUA;;AAEA,OAAOA,gBAAP;;AAEA,IAAIC,mBAAJ;;AACA,IAAMC,QAAQ,GAAG,wBAAjB;;AAWA,SAASC,YAAT,GAAuC;AACrC,MAAIF,mBAAmB,KAAKG,SAA5B,EAAuC;AACrC,QAAMC,KAAK,GAAGL,gBAAgB,CAACM,YAAjB,GAAgCC,SAAhC,CAA0CF,KAA1C,CACZ,mBADY,CAAd;AAGAJ,IAAAA,mBAAmB,GAAGI,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAR,GAAc,IAAzC;AACD;;AAED,SAAO;AACLG,IAAAA,GAAG,EAAEP,mBAAmB,IAAIC,QADvB;AAELO,IAAAA,sBAAsB,EAAER,mBAAmB,KAAK;AAF3C,GAAP;AAID;;AAEDS,MAAM,CAACC,OAAP,GAAiBR,YAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport NativeSourceCode from '../../NativeModules/specs/NativeSourceCode';\n\nlet _cachedDevServerURL: ?string;\nconst FALLBACK = 'http://localhost:8081/';\n\ntype DevServerInfo = {\n  url: string,\n  bundleLoadedFromServer: boolean,\n};\n\n/**\n * Many RN development tools rely on the development server (packager) running\n * @return URL to packager with trailing slash\n */\nfunction getDevServer(): DevServerInfo {\n  if (_cachedDevServerURL === undefined) {\n    const match = NativeSourceCode.getConstants().scriptURL.match(\n      /^https?:\\/\\/.*?\\//,\n    );\n    _cachedDevServerURL = match ? match[0] : null;\n  }\n\n  return {\n    url: _cachedDevServerURL || FALLBACK,\n    bundleLoadedFromServer: _cachedDevServerURL !== null,\n  };\n}\n\nmodule.exports = getDevServer;\n"]},"metadata":{},"sourceType":"module"}