{"ast":null,"code":"var _jsxFileName = \"/Users/biofanat/Documents/GitHub/compost/newFrontendBo/node_modules/react-native-numeric-input/Button/Button.js\";\nimport React, { Component } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\n\nfunction _handlePress(callback) {\n  requestAnimationFrame(callback);\n}\n\nvar Button = function Button(props) {\n  return Platform.OS === 'ios' ? React.createElement(TouchableOpacity, {\n    disabled: props.disabled,\n    style: props.style,\n    onPress: function onPress() {\n      return _handlePress(props.onPress);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, props.children) : React.createElement(TouchableNativeFeedback, {\n    disabled: props.disabled,\n    onPress: function onPress() {\n      return _handlePress(props.onPress);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: props.style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 107\n    }\n  }, props.children));\n};\n\nButton.defaultProps = {\n  onPress: function onPress() {}\n};\nexport default Button;","map":{"version":3,"sources":["/Users/biofanat/Documents/GitHub/compost/newFrontendBo/node_modules/react-native-numeric-input/Button/Button.js"],"names":["React","Component","_handlePress","callback","requestAnimationFrame","Button","props","Platform","OS","disabled","style","onPress","children","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;AASA,SAASC,YAAT,CAAsBC,QAAtB,EAA+B;AAC3BC,EAAAA,qBAAqB,CAACD,QAAD,CAArB;AACH;;AAGD,IAAME,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACtB,SACIC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACE,oBAAC,gBAAD;AAAkB,IAAA,QAAQ,EAAEF,KAAK,CAACG,QAAlC;AAA4C,IAAA,KAAK,EAAEH,KAAK,CAACI,KAAzD;AAAgE,IAAA,OAAO,EAAE;AAAA,aAAMR,YAAY,CAACI,KAAK,CAACK,OAAP,CAAlB;AAAA,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6GL,KAAK,CAACM,QAAnH,CADF,GAEE,oBAAC,uBAAD;AAA0B,IAAA,QAAQ,EAAEN,KAAK,CAACG,QAA1C;AAAoD,IAAA,OAAO,EAAE;AAAA,aAAMP,YAAY,CAACI,KAAK,CAACK,OAAP,CAAlB;AAAA,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,KAAK,CAACI,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BJ,KAAK,CAACM,QAAjC,CAAhG,CAHN;AAKH,CAND;;AAQAP,MAAM,CAACQ,YAAP,GAAsB;AAClBF,EAAAA,OAAO,EAAG,mBAAM,CAAE;AADA,CAAtB;AAIA,eAAeN,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Platform,\n    TouchableOpacity,\n    TouchableNativeFeedback,\n    View,\n    Text\n} from 'react-native';\n\nfunction _handlePress(callback){\n    requestAnimationFrame(callback)\n}\n\n\nconst Button = (props) => {\n    return (\n        Platform.OS === 'ios'\n        ? <TouchableOpacity disabled={props.disabled} style={props.style} onPress={() => _handlePress(props.onPress)}>{props.children}</TouchableOpacity> \n        : <TouchableNativeFeedback  disabled={props.disabled} onPress={() => _handlePress(props.onPress)}><View style={props.style}>{props.children}</View></TouchableNativeFeedback>\n    )\n}\n\nButton.defaultProps = {\n    onPress : () => {}\n}\n\nexport default Button;"]},"metadata":{},"sourceType":"module"}